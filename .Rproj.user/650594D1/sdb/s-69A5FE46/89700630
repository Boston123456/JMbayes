{
    "contents" : "pbc2$status2 <- as.numeric(pbc2$status != \"alive\")\npbc2.id$status2 <- as.numeric(pbc2.id$status != \"alive\")\npbc2$serBilirD <- 1 * (pbc2$serBilir > 1.8)\nind <- as.logical(with(pbc2, ave(serChol, id, FUN = function (x) !all(is.na(x)))))\npbc2 <- pbc2[ind, ]\npbc2.id <- pbc2[!duplicated(pbc2$id), ]\nlmeFit1 <- lme(log(serBilir) ~ ns(year, 2),\n               random = ~ ns(year, 2) | id, data = pbc2)\nlmeFit2 <- glmmPQL(serBilirD ~ year, random = ~ year | id, family = binomial, data = pbc2)\nlmeFit3 <- lme(serChol ~ ns(year, 2), random = ~ ns(year, 2) | id, data = pbc2,\n               na.action = na.exclude)\n\n#######################\n\nmodels <- list(lmeFit1, lmeFit2, lmeFit3)\ndata <- pbc2\n\n#######################\n\nlmeComponents <- lapply(models, framesLME)\nnY <- extract(lmeComponents, \"nY\", unlist = TRUE)\nif (!all(nY == nY[1L]))\n    stop(\"lme objects imply different number of subjects.\\n\")\nnY <- nY[1L]\nreord <- order(extract(lmeComponents, \"id\", unlist = TRUE))\noutcome <- rep(seq_along(lmeObject), extract(lmeComponents, \"n\", unlist = TRUE))[reord]\nid <- extract(lmeComponents, \"id\", reord, unlist = TRUE)\nidOrig <- extract(lmeComponents, \"idOrig\", reord, unlist = TRUE)\ntimes <- extract(lmeComponents, \"times\", reord, unlist = TRUE)\nmax.timeY <- tapply(times, id, max)\n#if (!all(Time >= max.timeY)) {\n#    idnams <- factor(idOrig)\n#    stop(\"\\nit seems that there are longitudinal measurements taken after the event times for some subjects \",\n#         \"(i.e., check subject(s): \", paste(levels(idnams)[(Time < max.timeY)], collapse = \", \"), \").\")\n#}\ny.long <- extract(lmeComponents, \"y.long\")\nX <- extract(lmeComponents, \"X\", reord, bdiag = TRUE)\nZ <- extract(lmeComponents, \"Z\", reord, bdiag = TRUE)\nb <- extract(lmeComponents, \"b\", cbind = TRUE)\nb_list <- extract(lmeComponents, \"b\")\nisGLMM <- extract(lmeComponents, \"isGLMM\", cbind = TRUE)\nbetas <- extract(lmeComponents, \"betas\", cbind = TRUE)\nbetas_list <- extract(lmeComponents, \"betas\")\nsigma <- extract(lmeComponents, \"sigma\", cbind = TRUE)\nD <- extract(lmeComponents, \"D\", bdiag = TRUE)\nlong <- extract(lmeComponents, \"long\", reord, unlist = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#multv_MixedModels <- function (models, data, priors = NULL, control = list()) {\n#}",
    "created" : 1447617013882.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1725518189",
    "id" : "89700630",
    "lastKnownWriteTime" : 1447617494,
    "path" : "C:/Users/Dimitris/Documents/PackagesGitHub/TestFiles/JMbayes/MultMixedModels.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_source"
}