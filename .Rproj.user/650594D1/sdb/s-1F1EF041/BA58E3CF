{
    "contents" : "print.summary.JMbayes <- function (x, digits = max(4, getOption(\"digits\") - 4),\n                                   printKnots = FALSE, ...) {\n    if (!inherits(x, \"summary.JMbayes\"))\n        stop(\"Use only with 'summary.JMbayes' objects.\\n\")\n    cat(\"\\nCall:\\n\", printCall(x$call), \"\\n\\n\", sep = \"\")\n    cat(\"Data Descriptives:\\n\")\n    pcEv <- round(100 * sum(x$d) / x$n, 1)\n    cat(\"Longitudinal Process\\t\\tEvent Process\")\n    cat(\"\\nNumber of Observations: \", x$N, \"\\tNumber of Events: \",\n        sum(x$d), \" (\", pcEv, \"%)\", sep = \"\")\n    cat(\"\\nNumber of subjects:\", x$n)\n    cat(\"\\n\\nJoint Model Summary:\")\n    if (x$densLongCheck) {\n        if (is.null(x$df.RE)) {\n            cat(\"\\nLongitudinal Process: Linear mixed-effects model\")\n        } else {\n            cat(\"\\nLongitudinal Process: Linear mixed-effects model with Student's-t(df=\", \n                x$df.RE, \") random effects\", sep = \"\")        \n        }\n    } else {\n        if (is.null(x$df.RE)) {\n            cat(\"\\nLongitudinal Process: user-defined mixed model\")\n        } else {\n            cat(\"\\nLongitudinal Process: user-defined mixed model with Student's-t(df=\", \n                x$df.RE, \") random effects\", sep = \"\")        \n        }\n    }\n    cat(\"\\nEvent Process: \")\n    xx <- if (length(x$control$knots) == 1L) {\n        kk <- round(unique(x$control$knots[[1]]), 1)\n        paste(kk[-c(1, length(kk))], collapse = \", \")\n    } else {\n        paste(names(x$control$knots), sapply(x$control$knots, function (k) {\n            kk <- round(unique(k), 1)\n            paste(kk[-c(1, length(kk))], collapse = \", \")\n        }), sep = \": \", collapse = \"\\n\\t\\t\")\n    }\n    ttE <- if (x$baseHaz == \"P-splines\") \"penalized-spline-approximated\" else \"spline-approximated\"\n    if (printKnots) {\n        cat(\"Relative risk model with \", ttE, \" baseline risk function (knots at: \", \n            xx, \")\\n\", sep = \"\")\n    } else {\n        cat(\"Relative risk model with\", ttE, \"\\n\\t\\tbaseline risk function\\n\")\n    }\n    if (x$estimateWeightFun) {\n        cat(\"Parameterization: weighted cumulative effect\\n\\n\")\n    } else {\n        cat(\"Parameterization:\", switch(x$param, \"td-value\" = \"Time-dependent value\",\n                                        \"td-extra\" = \"Time-dependent extra term\", \n                                        \"td-both\" = \"Time-dependent value + time-dependent extra term\",\n                                        \"shared-betasRE\" = \"shared subject-specific coefficients\",\n                                        \"shared-RE\" = \"shared random effects\"), \"\\n\\n\")\n    }\n    if (!is.null(x$DIC)){\n        model.sum <- data.frame(LPML = x$LPML, DIC = x$DIC, pD = x$pD, row.names = \"\")\n        print(model.sum)\n    }\n    cat(\"\\nVariance Components:\\n\")\n    D <- x$D\n    ncz <- nrow(D)\n    diag.D <- ncz != ncol(D)\n    sds <- if (diag.D) sqrt(D) else sqrt(diag(D))\n    if (ncz > 1) {\n        if (diag.D) {\n            dat <- as.data.frame(round(rbind(sds, \"Residual\" = x$sigma), digits))\n            names(dat) <- \"StdDev\"\n        } else {\n            corrs <- cov2cor(D)\n            corrs[upper.tri(corrs, TRUE)] <- 0\n            mat <- round(cbind(sds, corrs[, -ncz]), digits)\n            mat <- rbind(mat, c(x$sigma, rep(0, ncz - 1)))\n            mat <- apply(mat, 2, sprintf, fmt = \"% .4f\")\n            mat[mat == mat[1, 2]] <- \"\"\n            mat[1, -1] <- abbreviate(colnames(D)[-ncz], 6)\n            colnames(mat) <- c(colnames(mat)[1], rep(\"\", ncz - 1))\n            dat <- data.frame(mat, check.rows = FALSE, check.names = FALSE)\n            names(dat) <- c(\"StdDev\", \"Corr\", if (ncz > 2) rep(\" \", ncz - 2) else NULL)\n            row.names(dat) <- if (!is.null(x$sigma)) \n                c(dimnames(D)[[1]], \"Residual\") else c(dimnames(D)[[1]], \" \")\n        }\n    } else {\n        dat <- data.frame(\"StdDev\" = c(sds, x$sigma), \n                          row.names = if (!is.null(x$sigma)) c(rownames(D), \"Residual\") else rownames(D),\n                          check.rows = FALSE, check.names = FALSE)\n    }\n    print(dat)\n    cat(\"\\nCoefficients:\")\n    cat(\"\\nLongitudinal Process\\n\")\n    out <- as.data.frame(round(x$\"CoefTable-Long\", digits))\n    out$P <- format.pval2(out$P, digits = digits, eps = 1e-03)\n    print(out)\n    cat(\"\\nEvent Process\\n\")\n    out <- as.data.frame(round(x$\"CoefTable-Event\", digits))\n    out$P <- format.pval2(out$P, digits = digits, eps = 1e-03)\n    print(out)\n    cat(\"\\nMCMC summary:\\n\")\n    tt <- x$time[\"elapsed\"]/60\n    cat(\"iterations:\", x$control$n.iter, \"\\nadapt:\", x$control$n.adapt, \n        \"\\nburn-in:\", x$control$n.burnin, \"\\nthinning:\", x$control$n.thin,\n        \"\\ntime:\", if (tt > 60) round(tt/60, 1) else round(tt, 1), \n        if (tt > 60) \"hours\" else \"min\")\n    cat(\"\\n\")\n    invisible(x)\n}\n",
    "created" : 1444226741087.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1788650409",
    "id" : "BA58E3CF",
    "lastKnownWriteTime" : 1444226827,
    "path" : "C:/Users/Dimitris/Documents/PackagesGitHub/JMbayes/R/print.summary.JMbayes.R",
    "project_path" : "R/print.summary.JMbayes.R",
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "type" : "r_source"
}