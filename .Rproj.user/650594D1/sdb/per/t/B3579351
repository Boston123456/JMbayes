{
    "contents" : "plot.JMbayes <-\nfunction (x, which = c(\"trace\", \"autocorr\", \"density\", \"CPO\", \"weightFun\"), \n                          param = c(\"betas\", \"sigma\", \"D\", \"gammas\", \"alphas\", \"Dalphas\", \n                                    \"shapes\", \"Bs.gammas\", \"tauBs\"), \n                          ask = TRUE, max.t = NULL, from = 0, ...) {\n    if (!inherits(x, \"JMbayes\"))\n        stop(\"Use only with 'JMbayes' objects.\\n\")\n    which <- match.arg(which)\n    if (which %in% c(\"trace\", \"density\", \"autocorr\")) {\n        param <- match.arg(param, several.ok = TRUE)\n        if (any(param == \"D\")) {\n            keepD <- c(lower.tri(x$postMeans$D, TRUE))\n            x$mcmc$D <- x$mcmc$D[, keepD]\n        }\n        pp <- do.call(cbind, x$mcmc[param])\n        nams <- colnames(pp)\n        op <- if (ask) par(mfrow = c(2, 2), ask = ask) else par(mfrow = c(4, 2))\n        if (which == \"trace\") {   \n            for (i in 1:ncol(pp))\n                plot(pp[, i], type = \"l\", xlab = \"iterations\", ylab = nams[i])\n        } else if (which == \"density\") {\n            for (i in 1:ncol(pp)) {\n                bw <- bw.SJ(pp[, i]) * 1.5\n                plot(density(pp[, i], bw = bw), xlab = nams[i], \n                     main = paste(\"Density of\", nams[i]))\n            }            \n        } else {\n            for (i in 1:ncol(pp))\n                acf(pp[, i], ylab = nams[i], main = paste(\"Series\", nams[i]))\n        }\n        par(op)        \n    } else if (which == \"CPO\") {\n        n <- length(x$CPO)\n        matplot(matrix(1:n, 2, n, TRUE), rbind(rep(0, n), x$CPO), type = \"l\",\n                xlab = \"Subjects\", ylab = \"CPO\", main = deparse(substitute(x)), ...)\n    } else {\n        if (!x$estimateWeightFun)\n            stop(\"\\nweight function has not been estimated.\")\n        weightFun <- x$Funs$weightFun\n        if (is.null(max.t))\n            max.t <- quantile(x$y$Time, 0.25)\n        xx <- seq(1e-03, max.t, length.out = 101)\n        yy <- weightFun(xx, x$postMeans$shapes, max(x$y$Time))\n        plot(xx, yy, type = \"l\", xlab = \"t - s\", ylab = \"weights\", \n             main = \"Estimated Weight Function\")\n    }\n    invisible()\n}\n",
    "created" : 1456319403602.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1138483226",
    "id" : "B3579351",
    "lastKnownWriteTime" : 1441113503,
    "path" : "C:/Users/Dimitris/Documents/PackagesGitHub/JMbayes/R/plot.JMbayes.R",
    "project_path" : "R/plot.JMbayes.R",
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "type" : "r_source"
}