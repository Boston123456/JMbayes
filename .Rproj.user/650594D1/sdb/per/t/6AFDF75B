{
    "contents" : "library(MASS)\nlibrary(nlme)\nlibrary(splines)\nlibrary(survival)\nlibrary(lattice)\nsourceDir <- function(path, ...) {\n    for (nm in list.files(path, pattern = \"[.][RrSsQq]$\")) {\n        source(file.path(path, nm), ...)\n    }\n}\nsourceDir(file.path(getwd(), \"R\")); rm(sourceDir)\n\ndata(pbc2, package = \"JM\")\ndata(pbc2.id, package = \"JM\")\ndata(aids, package = \"JM\")\ndata(aids.id, package = \"JM\")\ndata(prothro, package = \"JM\")\ndata(prothros, package = \"JM\")\n\n#############################################\n\n# PBC\npbc2$status2 <- as.numeric(pbc2$status != \"alive\")\npbc2.id$status2 <- as.numeric(pbc2.id$status != \"alive\")\npbc2$serBilirD <- 1 * (pbc2$serBilir > 1.8)\npbc2$edemaBase <- with(pbc2, ave(edema, id, FUN = function (x) x[1]))\nlmeFit <- lme(log(serBilir) ~ ns(year, 2) + age,\n    random = ~ ns(year, 2) | id, data = pbc2)\n#lmeFit <- lme(log(serBilir) ~ edemaBase + year + drug + I(year^2) + age + year:edemaBase + drug:year + I(year^2):drug,\n#              random = ~ year | id, data = pbc2)\nlmeFit <- glmmPQL(serBilirD ~ year, random = ~ year | id, family = binomial, data = pbc2)\nsurvFit <- coxph(Surv(years, status2) ~ 1, data = pbc2.id, x = TRUE)\n\n# PBC competing risks, time-varying covariates & left-truncation\npbc <- pbc2[c(\"id\", \"serBilir\", \"drug\", \"year\", \"years\", \"status\", \"spiders\")]\npbc$start <- pbc$year\nsplitID <- split(pbc[c(\"start\", \"years\")], pbc$id)\npbc$stop <- unlist(lapply(splitID,\n                          function (d) c(d$start[-1], d$years[1]) ))\npbc <- pbc[!is.na(pbc$spiders), ]\npbc <- pbc[pbc$start != 0, ]\npbc$id <- factor(pbc$id)\npbc2CR <- crLong(pbc, statusVar = \"status\", censLevel = \"alive\", nameStrata = \"CR\")\npbc2CR$event <- with(pbc2CR, ave(status2, id,\n                                 FUN = function (x) c(rep(0, length(x)-2), x[1:2])))\n\nlmeFit <- lme(log(serBilir) ~ drug * ns(year, 2), data = pbc2CR,\n              random = ~ ns(year, 2) | id)\n\nsurvFit <- coxph(Surv(start, stop, event) ~ CR * drug * spiders + cluster(id) + strata(CR),\n                 data = pbc2CR, x = TRUE, model = TRUE)\n\n\n# PBC time-varying covariates & left-truncation\npbc <- pbc2[c(\"id\", \"serBilir\", \"drug\", \"year\", \"years\",\n              \"status2\", \"spiders\")]\npbc$start <- pbc$year\nsplitID <- split(pbc[c(\"start\", \"years\")], pbc$id)\npbc$stop <- unlist(lapply(splitID,\n                          function (d) c(d$start[-1], d$years[1]) ))\npbc$event <- with(pbc, ave(status2, id,\n                           FUN = function (x) c(rep(0, length(x)-1), x[1])))\npbc <- pbc[!is.na(pbc$spiders), ]\npbc <- pbc[pbc$start != 0, ]\n\nlmeFit <- lme(log(serBilir) ~ drug * ns(year, 2), data = pbc,\n              random = ~ ns(year, 2) | id)\n\nsurvFit <- coxph(Surv(start, stop, event) ~ drug * spiders + cluster(id),\n                 data = pbc, x = TRUE, model = TRUE)\n\n\n# AIDS\nlmeFit <- lme(CD4 ~ obstime + gender + drug, data = aids, \n              random = ~ obstime | patient)\n#survFit <- coxph(Surv(Time, death) ~ drug + gender, data = aids.id, x = TRUE)\nsurvFit <- coxph(Surv(start, stop, event) ~ drug + gender + cluster(patient), \n                 data = aids, x = TRUE, model = TRUE)\naids.id$start <- runif(nrow(aids.id), 0, 1) # left-truncation\naids.id$stop <- aids.id$Time\nsurvFit <- coxph(Surv(start, stop, event) ~ drug + gender + cluster(patient), \n                 data = aids.id, x = TRUE, model = TRUE)\n\n\nlmeObject = lmeFit\nsurvObject = survFit\ntimeVar = \"year\" #\"obstime\"\nparam = \"td-value\"\nextraForm = NULL\ntransFun = NULL\ndensLong = NULL\nbaseHaz = \"P-splines\" # \"regression-splines\"\nlag = 0\ninit = NULL\npriors = NULL\ncontrol = list()\ndf.RE = NULL\nscales = NULL\nestimateWeightFun = FALSE\nweightFun <- function (u, parms, t.max) {\n    #num <- dnorm(x = u, sd = parms)\n    #den <- pnorm(q = c(0, t.max), sd = parms)\n    #num / (den[2L] - den[1L])\n    exp(- parms * u)\n}\npriors = list(priorR.invD = diag(2))\n\n\ninitials = initial.values\npriors = prs\ncontrol = con\ncontrol$verbose = F\n\n##################################################################################\n\nlmeFit <- lme(log(serBilir) ~ ns(year, 2) + age + sex,\n              random = ~ ns(year, 2) | id, data = pbc2)\nsurvFit <- coxph(Surv(years, status2) ~ 1, data = pbc2.id, x = TRUE)\n\njointFit <- jointModelBayes(lmeFit, survFit, timeVar = \"year\")\n\n\nobject = jointFit\nnewdata = pbc2[pbc2$id %in% c(2, 21), ]\ntype = \"SurvProb\" \nidVar = \"id\"; simulate = TRUE; survTimes = NULL \nlast.time = NULL; LeftTrunc_var = NULL; M = 200L \nCI.levels = c(0.025, 0.975); log = FALSE; scale = 1.6; weight = rep(1, nrow(newdata)) \ninit.b = NULL; seed = 1L\n\n##################################################################################\n\n\nlibrary(\"shiny\")\nrunApp(file.path(.Library, \"JMbayes/demo\"))\n\nrunDynPred()\n\nrunApp(file.path(getwd(), \"vers2\", \"Rpgm\", \"shiny\"))\n\n\n\ngc()\n",
    "created" : 1442396155695.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1238407019",
    "id" : "6AFDF75B",
    "lastKnownWriteTime" : 1443426624,
    "path" : "C:/Users/Dimitris/Documents/PackagesGitHub/TestFiles/JMbayes/Test.r",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}