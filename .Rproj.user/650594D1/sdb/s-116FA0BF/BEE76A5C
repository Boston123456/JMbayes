{
    "contents" : "#########################################################################################\n# Description: R script replicating the results in the mansuscript entitled 'The R      #\n#              Package JMbayes for Fitting Joint Models for Longitudinal and            #\n#              Time-to-Event Data using MCMC'                                           #\n# Author: Dimitris Rizopoulos                                                           #\n# Last update: 2015-07-29                                                               #\n#########################################################################################\n\n\n###############\n# Section 4.1 #\n###############\n\nlibrary(\"JMbayes\")\nlibrary(\"lattice\")\npbc2$status2 <- as.numeric(pbc2$status != \"alive\")\npbc2.id$status2 <- as.numeric(pbc2.id$status != \"alive\")\n\n\nlmeFit.pbc1 <- lme(log(serBilir) ~ ns(year, 2), data = pbc2,\n                   random = ~ ns(year, 2) | id)\ncoxFit.pbc1 <- coxph(Surv(years, status2) ~ drug * age, data = pbc2.id, x = TRUE)\njointFit.pbc1 <- jointModelBayes(lmeFit.pbc1, coxFit.pbc1, timeVar = \"year\", \n                                 n.iter = 30000)\n\n\n###############\n# Section 4.2 #\n###############\n\n# a joint model with Student's-t error terms\ndLong <- function (y, eta.y, scale, log = FALSE, data) {\n    dgt(x = y, mu = eta.y, sigma = scale, df = 4, log = log)\n}\njointFit.pbc2 <- jointModelBayes(lmeFit.pbc1, coxFit.pbc1, timeVar = \"year\", \n                                 densLong = dLong)\n\n# a joint model for a dichotomous longitudinal outcome\npbc2$serBilirD <- as.numeric(pbc2$serBilir > 1.8)\nlmeFit.pbc2 <- glmmPQL(serBilirD ~ year, random = ~ year | id, family = binomial, \n                       data = pbc2)\ndLongBin <- function (y, eta.y, scale, log = FALSE, data) {\n    dbinom(x = y, size = 1, prob = plogis(eta.y), log = log)\n}\njointFit.pbc3 <- jointModelBayes(lmeFit.pbc2, coxFit.pbc1, timeVar = \"year\", \n                                 densLong = dLongBin)\n\n# a joint model for a left censored longitudinal outcome\npbc2$CensInd <- as.numeric(pbc2$serBilir <= 0.8)\npbc2$serBilir2 <- pbc2$serBilir\npbc2$serBilir2[pbc2$serBilir2 <= 0.8] <- 0.8\n\ncensdLong <- function (y, eta.y, scale, log = FALSE, data) {\n    log.f <- dnorm(x = y, mean = eta.y, sd = scale, log = TRUE)\n    log.F <- pnorm(q = y, mean = eta.y, sd = scale, log.p = TRUE)\n    ind <- data$CensInd\n    log.dens <- (1 - ind) * log.f + ind * log.F\n    if (log) log.dens else exp(log.dens)\n}\nlmeFit.pbc3 <- lme(log(serBilir2) ~ ns(year, 2), data = pbc2,\n                   random = ~ ns(year, 2) | id)\njointFit.pbc4 <- jointModelBayes(lmeFit.pbc3, coxFit.pbc1, timeVar = \"year\",\n                                  densLong = censdLong)\n\n\n###############\n# Section 4.3 #\n###############\n\n# a joint model with the current value and current slope term \ndForm <- list(fixed = ~ 0 + dns(year, 2), random = ~ 0 + dns(year, 2), \n              indFixed = 2:3, indRandom = 2:3)\njointFit.pbc12 <- update(jointFit.pbc1, param = \"td-both\", extraForm = dForm)\n\n\n# a joint model with a cumulative effect\niForm <- list(fixed = ~ 0 + year + ins(year, 2), random = ~ 0 + year + ins(year, 2), \n              indFixed = 1:3, indRandom = 1:3)\njointFit.pbc13 <- update(jointFit.pbc1, param = \"td-extra\", extraForm = iForm)\n\nwf <- function (u, parms, t.max) {\n    num <- dnorm(x = u, sd = parms)\n    den <- pnorm(q = c(0, t.max), sd = parms)\n    num / (den[2L] - den[1L])\n}\njointFit.pbc13w <- update(jointFit.pbc1, estimateWeightFun = TRUE, \n                          weightFun = wf, priorShapes = list(shape1 = dunif),\n                          priors = list(priorshape1 = c(0, 10)))\n\n\n# a joint model with the shared random effects parameterization\njointFit.pbc14 <- update(jointFit.pbc1, param = \"shared-RE\", n.iter = 50000)\n\n\n###############\n# Section 4.4 #\n###############\n\n# use of transformation functions\ntf1 <- function (x, data) cbind(x, \"^2\" = x*x)\ntf2 <- function (x, data) cbind(x, \"D-penicil\" = x * (data$drug == 'D-penicil'))\njointFit.pbc15 <- update(jointFit.pbc12, transFun = list(value = tf1, extra = tf2))\n\n\n###################################################################################\n###################################################################################\n\n\n###############\n# Section 5.1 #\n###############\n\n# Dynamic predictions for Patient 2 for the survival and longitudinal outcomes\nND <- pbc2[pbc2$id == 2, ]\nsfit.pbc15 <- survfitJM(jointFit.pbc15, newdata = ND)\n\nplot(sfit.pbc15, estimator = \"mean\", include.y = TRUE,\n     conf.int = TRUE, fill.area = TRUE, col.area = \"lightgrey\")\n\nPs.pbc15 <- predict(jointFit.pbc15, ND, type = \"Subject\", \n                    interval = \"confidence\", return = TRUE)\n\nlast.time <- with(Ps.pbc15, year[!is.na(low)][1])\n\nxyplot(pred + low + upp ~ year, data = Ps.pbc15, type = \"l\", \n       lty = c(1,2,2), col = c(2,1,1), abline = list(v = last.time, lty = 3), \n       xlab = \"Time (years)\", ylab = \"Predicted log(serum bilirubin)\")\n\n\n# Web interface with shiny\nrunDynPred()\n\n\n###############\n# Section 5.2 #\n###############\n\n# Bayesian Model Averaging\nModels <- list(jointFit.pbc1, jointFit.pbc12, jointFit.pbc13, \n               jointFit.pbc14, jointFit.pbc15)\n\nlog.p.Mk <- log(rep(1/5, 5))\nlog.p.Dn.Mk <- sapply(Models, logLik, marginal.thetas = TRUE)\nlog.p.Dj.Mk <- sapply(Models, marglogLik, newdata = ND[1:5, ])\n\nweightsBMA <- log.p.Dj.Mk + log.p.Dn.Mk + log.p.Mk\nweightsBMA <- exp(weightsBMA - mean(weightsBMA, na.rm = TRUE))\nweightsBMA <- weightsBMA / sum(weightsBMA, na.rm = TRUE)\n\nsurvPreds <- lapply(Models, survfitJM, newdata = ND[1:5, ])\n\nsurvPreds.BMA <- bma.combine(JMlis = survPreds, weights = weightsBMA)\nsurvPreds.BMA\n\n\n###############\n# Section 5.3 #\n###############\n\n# Discrimination & Calibration\nauc.pbc15 <- aucJM(jointFit.pbc15, pbc2, Tstart = 5, Dt = 2)\nroc.pbc15 <- rocJM(jointFit.pbc15, pbc2, Tstart = 5, Dt = 2)\ndynC.pbc15 <- dynCJM(jointFit.pbc15, pbc2, Dt = 2)\npe.pbc15 <- prederrJM(jointFit.pbc15, pbc2, Tstart = 5, Thoriz = 7)\nipe.pbc15 <- prederrJM(jointFit.pbc15, pbc2, Tstart = 5, Thoriz = 9, interval = TRUE)\n\n# Validation using 10-fold CV\nlibrary(\"parallel\")\nset.seed(123)\nV <- 10\nn <- nrow(pbc2.id)\nsplits <- split(seq_len(n), sample(rep(seq_len(V), length.out = n)))\nCrossValJM <- function (i) {\n    library(\"JMbayes\")\n    pbc2$status2 <- as.numeric(pbc2$status != \"alive\")\n    pbc2.id$status2 <- as.numeric(pbc2.id$status != \"alive\")\n    trainingData <- pbc2[!pbc2$id %in% i, ]\n    trainingData.id <- trainingData[!duplicated(trainingData$id), ]\n    testingData <- pbc2[pbc2$id %in% i, ]\n    \n    lmeFit.pbc1 <- lme(log(serBilir) ~ ns(year, 2), data = trainingData,\n                       random = ~ ns(year, 2) | id)\n    coxFit.pbc1 <- coxph(Surv(years, status2) ~ drug * age, data = trainingData.id, \n                         x = TRUE)\n    \n    dForm <- list(fixed = ~ 0 + dns(year, 2), random = ~ 0 + dns(year, 2), \n                  indFixed = 2:3, indRandom = 2:3)\n    tf1 <- function (x, data) cbind(x, \"^2\" = x*x)\n    tf2 <- function (x, data) cbind(x, \"drugD-penicil\" = x * (data$drug == 'D-penicil'))\n    jointFit.pbc15 <- jointModelBayes(lmeFit.pbc1, coxFit.pbc1, timeVar = \"year\",\n                                      param = \"td-both\", extraForm = dForm, \n                                      transFun = list(value = tf1, extra = tf2))\n    \n    pe <- prederrJM(jointFit.pbc15, newdata = testingData, Tstart = 5, Thoriz = 7)\n    auc <- aucJM(jointFit.pbc15, newdata = testingData, Tstart = 5, Thoriz = 7)\n    \n    list(pe = pe, auc = auc)\n}\n\n\ncl <- makeCluster(5)\nres <- parLapply(cl, splits, CrossValJM)\nstopCluster(cl)\n\n\n# cross-validation estimates of the prediction error and the AUC\nmean(sapply(res, function (x) x$pe$prederr))\nmean(sapply(res, function (x) x$auc$auc))\n\n\n##############\n# Appendix A #\n##############\n\njointFit.pbc1.10knots <- update(jointFit.pbc1, lng.in.kn = 10L)\njointFit.pbc1.20knots <- update(jointFit.pbc1, lng.in.kn = 20L)\n\njointFit.pbc15.10knots <- update(jointFit.pbc15, lng.in.kn = 10L)\njointFit.pbc15.20knots <- update(jointFit.pbc15, lng.in.kn = 20L)\n\n\n##############\n# Appendix C #\n##############\n\npbc <- pbc2[c(\"id\", \"serBilir\", \"drug\", \"year\", \"years\",\n              \"status2\", \"spiders\")]\npbc$start <- pbc$year\nsplitID <- split(pbc[c(\"start\", \"years\")], pbc$id)\npbc$stop <- unlist(lapply(splitID,\n                          function (d) c(d$start[-1], d$years[1]) ))\npbc$event <- with(pbc, ave(status2, id,\n                           FUN = function (x) c(rep(0, length(x)-1), x[1])))\npbc <- pbc[!is.na(pbc$spiders), ]\npbc <- pbc[pbc$start != 0, ]\n\nlmeFit.pbc <- lme(log(serBilir) ~ drug * ns(year, 2),\n                  random = ~ ns(year, 2) | id, data = pbc)\n\ntdCox.pbc <- coxph(Surv(start, stop, event) ~ drug * spiders + cluster(id),\n                   data = pbc, x = TRUE, model = TRUE)\n\njointFit.pbc <- jointModelBayes(lmeFit.pbc, tdCox.pbc, timeVar = \"year\")\n\nsummary(jointFit.pbc)\n\n###################################################################################\n###################################################################################\n\nsave.image(file = \"C:/Users/dimitris/Documents/Papers/Paper18/Results/Application/AnalysesPaper.RData\")\n",
    "created" : 1442413419868.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3194796760",
    "id" : "BEE76A5C",
    "lastKnownWriteTime" : 1438103910,
    "path" : "C:/Users/Dimitris/Documents/Papers/Paper18/Rpgm/Application/Analyses.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_source"
}